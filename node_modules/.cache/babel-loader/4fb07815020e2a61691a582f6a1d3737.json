{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Documents/blue-ocean-project/src/Components/Landing/LoginModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport { CgEnter } from 'react-icons/cg';\nimport AppContext from '../../Context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginModal(_ref) {\n  _s();\n\n  let {\n    invokeSetLogin,\n    setShowLoginModal\n  } = _ref;\n  const {\n    allUserData,\n    allCohortsData,\n    invokeSetAllUsersData,\n    invokeSetAllCohortsData\n  } = useContext(AppContext);\n  const [loginData, setLoginData] = useState({\n    username: '',\n    password: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(allUserData[0]); // invokeSetLogin(true)\n\n    console.log({\n      loginData\n    });\n  };\n\n  const handleChange = e => {\n    setLoginData(prevLoginData => {\n      return { ...prevLoginData,\n        [e.target.name]: e.target.value\n      };\n    });\n  }; // const handleShowCreateAccModal = () => {\n  //     setShowLoginModal(false)\n  // }\n\n\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginInputBox\",\n          type: \"text\",\n          placeholder: \"User name\",\n          name: \"username\",\n          value: loginData.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginInputBox\",\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: loginData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"loginBtn\",\n          children: [\"Log in  \", /*#__PURE__*/_jsxDEV(CgEnter, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 54\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this), document.getElementById('portal'));\n}\n\n_s(LoginModal, \"kXb0hsNPYXlsMG1SttB/s/HH7Oc=\");\n\n_c = LoginModal;\nexport default LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["React","useState","useContext","ReactDOM","CgEnter","AppContext","LoginModal","invokeSetLogin","setShowLoginModal","allUserData","allCohortsData","invokeSetAllUsersData","invokeSetAllCohortsData","loginData","setLoginData","username","password","handleSubmit","e","preventDefault","console","log","handleChange","prevLoginData","target","name","value","createPortal","document","getElementById"],"sources":["/Users/neo/Documents/blue-ocean-project/src/Components/Landing/LoginModal.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport ReactDOM from 'react-dom'\nimport { CgEnter } from 'react-icons/cg'\nimport AppContext from '../../Context/AppContext';\n\nfunction LoginModal({ invokeSetLogin, setShowLoginModal }) {\n    const { allUserData, allCohortsData, invokeSetAllUsersData, invokeSetAllCohortsData } = useContext(AppContext)\n\n    const [loginData, setLoginData] = useState({\n        username: '',\n        password: '',\n    })\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(allUserData[0])\n        // invokeSetLogin(true)\n        console.log({ loginData })\n    }\n\n    const handleChange = (e) => {\n        setLoginData((prevLoginData) => {\n            return {\n                ...prevLoginData,\n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    // const handleShowCreateAccModal = () => {\n    //     setShowLoginModal(false)\n    // }\n\n    return ReactDOM.createPortal(\n        <div className='modalContainer'>\n            <div className='loginContainer'>\n                <form className='loginForm' onSubmit={handleSubmit}>\n                    <input\n                        className='loginInputBox'\n                        type='text'\n                        placeholder='User name'\n                        name='username'\n                        value={loginData.username}\n                        onChange={handleChange} />\n                    <input\n                        className='loginInputBox'\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={loginData.password}\n                        onChange={handleChange} />\n                    <button\n                        type='submit'\n                        className='loginBtn'>Log in  <CgEnter /> </button>\n\n                    {/* <button\n                        type='button'\n                        className='loginBtn createAccBtn'\n                        onClick={handleShowCreateAccModal}>Create an Account</button> */}\n                </form>\n            </div>\n\n        </div>,\n        document.getElementById('portal')\n    )\n}\n\nexport default LoginModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,SAASC,UAAT,OAA2D;EAAA;;EAAA,IAAvC;IAAEC,cAAF;IAAkBC;EAAlB,CAAuC;EACvD,MAAM;IAAEC,WAAF;IAAeC,cAAf;IAA+BC,qBAA/B;IAAsDC;EAAtD,IAAkFV,UAAU,CAACG,UAAD,CAAlG;EAEA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC;IACvCc,QAAQ,EAAE,EAD6B;IAEvCC,QAAQ,EAAE;EAF6B,CAAD,CAA1C;;EAKA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IACxBA,CAAC,CAACC,cAAF;IACAC,OAAO,CAACC,GAAR,CAAYZ,WAAW,CAAC,CAAD,CAAvB,EAFwB,CAGxB;;IACAW,OAAO,CAACC,GAAR,CAAY;MAAER;IAAF,CAAZ;EACH,CALD;;EAOA,MAAMS,YAAY,GAAIJ,CAAD,IAAO;IACxBJ,YAAY,CAAES,aAAD,IAAmB;MAC5B,OAAO,EACH,GAAGA,aADA;QAEH,CAACL,CAAC,CAACM,MAAF,CAASC,IAAV,GAAiBP,CAAC,CAACM,MAAF,CAASE;MAFvB,CAAP;IAIH,CALW,CAAZ;EAMH,CAPD,CAfuD,CAwBvD;EACA;EACA;;;EAEA,oBAAOvB,QAAQ,CAACwB,YAAT,eACH;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACI;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACI;QAAM,SAAS,EAAC,WAAhB;QAA4B,QAAQ,EAAEV,YAAtC;QAAA,wBACI;UACI,SAAS,EAAC,eADd;UAEI,IAAI,EAAC,MAFT;UAGI,WAAW,EAAC,WAHhB;UAII,IAAI,EAAC,UAJT;UAKI,KAAK,EAAEJ,SAAS,CAACE,QALrB;UAMI,QAAQ,EAAEO;QANd;UAAA;UAAA;UAAA;QAAA,QADJ,eAQI;UACI,SAAS,EAAC,eADd;UAEI,IAAI,EAAC,UAFT;UAGI,WAAW,EAAC,UAHhB;UAII,IAAI,EAAC,UAJT;UAKI,KAAK,EAAET,SAAS,CAACG,QALrB;UAMI,QAAQ,EAAEM;QANd;UAAA;UAAA;UAAA;QAAA,QARJ,eAeI;UACI,IAAI,EAAC,QADT;UAEI,SAAS,EAAC,UAFd;UAAA,oCAEiC,QAAC,OAAD;YAAA;YAAA;YAAA;UAAA,QAFjC;QAAA;UAAA;UAAA;UAAA;QAAA,QAfJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADG,EA8BHM,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CA9BG,CAAP;AAgCH;;GA5DQvB,U;;KAAAA,U;AA8DT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}