{"ast":null,"code":"var _jsxFileName = \"/Users/neo/Documents/blue-ocean-project/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './StyleSheets/App.css';\nimport { useState, useContext } from 'react';\nimport { Routes, Route } from \"react-router-dom\";\nimport Loading from './Components/LoadingDisplay/Loading';\nimport LoginPage from './Components/Landing/LoginPage';\nimport HomePage from './Components/HomePage/HomePage';\nimport LoginContext from './Context/LoginContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    login,\n    userData,\n    changeSetLogin\n  } = useContext(LoginContext);\n  let [loading, setLoading] = useState(false);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (!login) {\n    return /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AppContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blue Ocean\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZhlZSwGc5KvgCQ3wk9+CxRF0NKY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useContext","Routes","Route","Loading","LoginPage","HomePage","LoginContext","App","login","userData","changeSetLogin","loading","setLoading"],"sources":["/Users/neo/Documents/blue-ocean-project/src/App.jsx"],"sourcesContent":["import './StyleSheets/App.css';\nimport { useState, useContext } from 'react';\nimport { Routes, Route } from \"react-router-dom\"\nimport Loading from './Components/LoadingDisplay/Loading'\nimport LoginPage from './Components/Landing/LoginPage'\nimport HomePage from './Components/HomePage/HomePage'\nimport LoginContext from './Context/LoginContext';\n\nfunction App() {\n  const { login, userData, changeSetLogin } = useContext(LoginContext)\n  let [loading, setLoading] = useState(false);\n\n  if (loading) {\n    return (<Loading />)\n  }\n\n  if (!login) {\n    return <LoginPage />\n  }\n\n  return (\n\n    <div className=\"AppContainer\">\n      <h1>Blue Ocean</h1>\n      {/* {login ? <h1> Blue Ocean! </h1> : <LoginPage />} */}\n      <Routes>\n        <Route path=\"/\" element={<LoginPage />} />\n      </Routes>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM;IAAEC,KAAF;IAASC,QAAT;IAAmBC;EAAnB,IAAsCV,UAAU,CAACM,YAAD,CAAtD;EACA,IAAI,CAACK,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAApC;;EAEA,IAAIY,OAAJ,EAAa;IACX,oBAAQ,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAR;EACD;;EAED,IAAI,CAACH,KAAL,EAAY;IACV,oBAAO,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBAEE;IAAK,SAAS,EAAC,cAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,MAAD;MAAA,uBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAWD;;GAvBQD,G;;KAAAA,G;AAyBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}